//: Switch

let numero = 7

switch numero {
case 1:
    print("O n√∫mero √© 'um'!")
    // 'break' n√£o √© obrigat√≥rio
case 3:
    print("3")
    fallthrough // for√ßa cair, ou seja, pula pro 5
case 5:
    print("N√∫mero √≠mpar")
case 2,4,6,8:
    print("N√∫mero par")
case 10..<30:
    print("N√∫mero entre 10 e 30, mas n√£o o 30")
case 30...100:
    print("N√∫mero entre 30 e 100, com o 100 incluso")
default:
    // tamb√©m poderia ser somente um 'break'
    print("Um n√∫mero n√£o investigado")
}

// Quick fix
// Fa√ßa um switch que diga se uma constante Character √© vogal
let letra:Character = "a"

// Resolu√ß√£o

// Convertendo para lower:
// let A:Character = "A"
// String(A).lowercaseString

switch letra {
    case "a","e","i","o","u":
        print("√â uma vogal.")
    case "A","E","I","O","U":
        print("√â uma vogal mai√∫scula.")
    default:
        print("N√£o √© uma vogal.")
}

let ponto = (1,2)

switch ponto{
case(0,0):
    print("Estou na origem")
case(0,_):
    print("Estou no eixo Y")
case(_,0):
    print("Estoui no eixo X")
    
case(-2...2,-2...2):
    print("Dentro da caixa 2x2")
    
default:
    print("Ponto no gr√°fico")
}


// Por tipo de objeto

let valor:Any = 7

switch valor {

// se eu conseguir criar uma constante 's'
// a partir da vari√°vel 'valor', execute
case let s as String:
    print("Sou um texto: \(s)")
case let d as Int:
    print("Sou um n√∫mero: \(d)")
default:
    print("N√£o sei bem que tipo √© üòÖ")
}

let dinheiros:Any = 100.0


switch dinheiros {
// caso eu consiga criar uma constante 'd', a partir de 'dinheiros'
// e onde 'd' seja maior que 100, execute
case let d as Double where d > 100:
    print("Temos muitos dinheiros ü§ë")
case let d as Double where d >= 0:
    print("N√£o temos muito dinheiro üòê")
case let d as Double where d < 0:
    print("Estamos devendo dinheiro üò≠")
default:
    print("N√£o vamos falar de dinheiro ü§ñ")
}

