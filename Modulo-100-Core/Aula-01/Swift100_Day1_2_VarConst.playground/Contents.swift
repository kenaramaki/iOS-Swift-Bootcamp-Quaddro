//: Vari√°veis e Constantes

// ~ regrinha ~
// var 'nomeDaVariavel' = 'valor'
// var 'nomeDaVariavel':'tipo' = 'valor'

var meuNome1 = "Ken"
meuNome1 = "√Årthur"

// √â tipagem forte! ou seja
// isso n√£o funciona: meuNome = 6

// com declara√ß√£o de tipo
var umN√∫meroDaSorte:Int = 13

// Swift √© UTF-8
var a√ß√µes = "OLX"
var üí© = "Coc√¥"

// Lista de tipos b√°sicos
var decimalGrande:Double = 3.1416 // Precis√£o maior, dobro do Float
var decimal:Float = 2.0790

// Inteiros
var inteiro:Int = 4

// especificando tamanhos
Int8.max
Int16.max
Int32.max
Int64.max

// texto / string
var frase:String = "Loremp Ipsum"
var letra:Character = "K"

// D√° pra pegar a lista de characters 
// usando a propriedade 'characters'
frase.characters

for letra in frase.characters {
    print (letra)
}

// Boolean
var flag:Bool = false
var valido = true

//: Constantes

// Igual a var, mas o valor s√≥
// pode ser definido uma vez
let interjei√ß√£o = "Mas b√°, tch√™!"

// ou seja, n√£o vai funcionar:
// interjei√ß√£o = "√¥xente!"

// Por exemplo, constantes globais
let PI = 3.1416
let DIA_DO_DESCOBRIMENTO_DO_BRASIL = 22

// Reflex√£o sobre "ser definido uma s√≥ vez"
// veja que interessante:

let tamanho = "G"
let ficaria:String

if tamanho == "G" {
    ficaria = "grande"
}else{
    ficaria = "na medida"
}

// Quick Fix
// Declare as seguintes vari√°veis
// Pense se deveria ser let/var e o tipo
// - meuNome
// - meuAnoNascimento
// - minhaNacionalidade
// - minhaIdade
// - minhaAltura
// - tenhoCNH

var meuNome:String = "Ken"
let meuAnoNascimento:UInt16 = 1990 // U na frente -> n√£o pode ser negativo
var minhaNacionalidade:String = "Brasileiro"
var minhaIdade:UInt8 = 26
UInt8.max
var minhaAltura:Double = 1.82
var tenhoCNH:Bool =  true
